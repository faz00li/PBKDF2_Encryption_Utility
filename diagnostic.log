getArgs()
Mode: encrypt
File Path: /home/seed/Documents/PBKDF2_Encryption_Utility/README.md
Password: password

Beginning Encryption

initEncryptionScheme()
Initial Encryption Scheme:  {'KDF': 'PBKDF2', 'count': 1000, 'iv': 'none', 'encryptionType': 'AES128', 'hashType': 'SHA256'}

getPlaintext()
Plaintext:  b'# PBKDF2_Encryption_Utility\nThis PBKDF2 encryption utility supports the following three symmetric encryption standards: 3DES, AES128, and AES256. The utility also supports two hashing algorithms: SHA256 and SHA512. To configure the utility enter 1) the path to the file you wish to encrypt 2) specify the hash type 3) specify the encryption standard 4) a password from which to the derive master key and 5) the number of iterations for PBKDF2"\n'

generateSalts(block_size)
Desired Salt Length:  16
Master Salt Type:  <class 'bytes'>
Master Salt:  b'\x1b\x80\xb2\xa0\xc2\x92\nb\x83\x99\xf2\x85\xe2s\xddt'
Encryption Salt Type:  <class 'bytes'>
Encryption Salt:  b'F\xe4\x82j\xf3\x19fO\xdb}]\x8a\xd6;7\xba'
HMAC Salt Type:  <class 'bytes'>
HMAC Salt:  b'\x85\xec\x8d\x9a\x8d[\x86\xe6\x9c\x0f\xf55Lq\xf2\xc5'

createKey()
Password:  password
Salt:  b'\x1b\x80\xb2\xa0\xc2\x92\nb\x83\x99\xf2\x85\xe2s\xddt'
Desired Key Length:  16
Count:  1000
Encryption Type:  Crypto.Hash.SHA256

Master Key Type:  <class 'bytes'>
Master Key:  b'Fx-\xc1$\xb6\x0c\x0b\x03\x01d\xe1\x1b\x01\xfd\xf9'

createKey()
Password:  password
Salt:  b'F\xe4\x82j\xf3\x19fO\xdb}]\x8a\xd6;7\xba'
Desired Key Length:  16
Count:  1
Encryption Type:  Crypto.Hash.SHA256

Encryption Key Type:  <class 'bytes'>
Encryption Key:  b'\x02\xdfQw\xdf\x9f\xd3\x18\xdc\xc6\xf3\xfcX\xedx\xc6'

createKey()
Password:  password
Salt:  b'\x85\xec\x8d\x9a\x8d[\x86\xe6\x9c\x0f\xf55Lq\xf2\xc5'
Desired Key Length:  16
Count:  1
Encryption Type:  Crypto.Hash.SHA256

HMAC Key Type:  <class 'bytes'>
HMAC Key:  b'\x85):\x1a\xc4XT\x9c\x80~PvM|p\x14'

SUMMARY DEBUG
Plaintext Type:  <class 'bytes'>
Plaintext:  b'# PBKDF2_Encryption_Utility\nThis PBKDF2 encryption utility supports the following three symmetric encryption standards: 3DES, AES128, and AES256. The utility also supports two hashing algorithms: SHA256 and SHA512. To configure the utility enter 1) the path to the file you wish to encrypt 2) specify the hash type 3) specify the encryption standard 4) a password from which to the derive master key and 5) the number of iterations for PBKDF2"\n'

Master Key Type:  <class 'bytes'>
Master Key:  b'Fx-\xc1$\xb6\x0c\x0b\x03\x01d\xe1\x1b\x01\xfd\xf9'

Encryption Key Type:  <class 'bytes'>
Encryption Key:  b'\x02\xdfQw\xdf\x9f\xd3\x18\xdc\xc6\xf3\xfcX\xedx\xc6'

HMAC Key Type:  <class 'bytes'>
HMAC Key:  b'\x85):\x1a\xc4XT\x9c\x80~PvM|p\x14'

